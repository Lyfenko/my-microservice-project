# CI/CD –ö–æ–Ω–≤–µ—î—Ä –¥–ª—è Django-–¥–æ–¥–∞—Ç–∫–∞ –∑ Jenkins, Terraform, Helm —Ç–∞ ArgoCD

–¶–µ–π –ø—Ä–æ—î–∫—Ç —Ä–µ–∞–ª—ñ–∑—É—î **–∞–≤—Ç–æ–º–∞—Ç–∏–∑–æ–≤–∞–Ω–∏–π CI/CD –∫–æ–Ω–≤–µ—î—Ä** –¥–ª—è —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è Django-–¥–æ–¥–∞—Ç–∫–∞ –≤ AWS EKS –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é Jenkins, Terraform, Helm —Ç–∞ ArgoCD. –ö–æ–Ω–≤–µ—î—Ä –±—É–¥—É—î Docker-–æ–±—Ä–∞–∑, –ø—É—à–∏—Ç—å –π–æ–≥–æ –≤ Amazon ECR, –æ–Ω–æ–≤–ª—é—î Helm-—á–∞—Ä—Ç —ñ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Ä–æ–∑–≥–æ—Ä—Ç–∞—î –∑–º—ñ–Ω–∏ –≤ –∫–ª–∞—Å—Ç–µ—Ä—ñ —á–µ—Ä–µ–∑ ArgoCD. –ü—Ä–æ—î–∫—Ç —Ç–∞–∫–æ–∂ –≤–∫–ª—é—á–∞—î **—É–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π –º–æ–¥—É–ª—å RDS**, —è–∫–∏–π –¥–æ–∑–≤–æ–ª—è—î —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ Aurora Cluster –∞–±–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π RDS —Ä–∞–∑–æ–º —ñ–∑ –¥–æ–ø–æ–º—ñ–∂–Ω–∏–º–∏ —Ä–µ—Å—É—Ä—Å–∞–º–∏ (DB Subnet Group, Security Group, Parameter Group).

---

## üìã –û–≥–ª—è–¥ –ø—Ä–æ—î–∫—Ç—É

**–ú–µ—Ç–∞**: –ê–≤—Ç–æ–º–∞—Ç–∏–∑—É–≤–∞—Ç–∏ CI/CD –¥–ª—è Django-–¥–æ–¥–∞—Ç–∫–∞ —Ç–∞ –Ω–∞–¥–∞—Ç–∏ –≥–Ω—É—á–∫–∏–π –º–æ–¥—É–ª—å –¥–ª—è —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è –±–∞–∑ –¥–∞–Ω–∏—Ö.

**–¢–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó**:
- **Terraform**: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∏ (VPC, EKS, ECR, S3, DynamoDB, RDS).
- **Helm**: –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Jenkins, ArgoCD —Ç–∞ —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è Django-–¥–æ–¥–∞—Ç–∫–∞.
- **Jenkins**: –ü–æ–±—É–¥–æ–≤–∞ —Ç–∞ –ø—É—à Docker-–æ–±—Ä–∞–∑—ñ–≤, –æ–Ω–æ–≤–ª–µ–Ω–Ω—è Helm-—á–∞—Ä—Ç—É.
- **ArgoCD**: –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∑–º—ñ–Ω —ñ–∑ Git —É –∫–ª–∞—Å—Ç–µ—Ä—ñ.
- **AWS RDS**: –£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π –º–æ–¥—É–ª—å –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è Aurora Cluster –∞–±–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ RDS.
- **Prometheus/Grafana**: –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–∞–Ω—É –∫–ª–∞—Å—Ç–µ—Ä–∞ —Ç–∞ –¥–æ–¥–∞—Ç–∫–∞.
- **HPA**: –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–µ –∞–≤—Ç–æ–º–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è Django-–¥–æ–¥–∞—Ç–∫–∞.

**–†–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π**: [https://github.com/Lyfenko/my-microservice-project.git](https://github.com/Lyfenko/my-microservice-project.git) (–≥—ñ–ª–∫–∞: `lesson-db-module`)

---

## üóÇ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ—î–∫—Ç—É

```
my-microservice-project/
‚îÇ
‚îú‚îÄ‚îÄ main.tf                 # –ì–æ–ª–æ–≤–Ω–∏–π —Ñ–∞–π–ª Terraform –¥–ª—è —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó –º–æ–¥—É–ª—ñ–≤
‚îú‚îÄ‚îÄ backend.tf              # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è S3 —Ç–∞ DynamoDB –¥–ª—è —Å—Ç–∞–Ω—É Terraform
‚îú‚îÄ‚îÄ outputs.tf              # –í–∏–≤–æ–¥–∏ —Ä–µ—Å—É—Ä—Å—ñ–≤
‚îú‚îÄ‚îÄ init.sh                 # –°–∫—Ä–∏–ø—Ç –¥–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Ç–∞ —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è
‚îú‚îÄ‚îÄ Jenkinsfile             # Jenkins-–∫–æ–Ω–≤–µ—î—Ä –¥–ª—è CI/CD
‚îú‚îÄ‚îÄ charts/
‚îÇ   ‚îú‚îÄ‚îÄ django-app/         # Helm-—á–∞—Ä—Ç –¥–ª—è Django-–¥–æ–¥–∞—Ç–∫–∞
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Chart.yaml      # –ú–µ—Ç–∞–¥–∞–Ω–∏–π —á–∞—Ä—Ç—É
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ values.yaml     # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è (–æ–±—Ä–∞–∑, —Å–µ—Ä–≤—ñ—Å, RDS)
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ templates/
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ configmap.yaml        # –ó–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ deployment.yaml       # Deployment –¥–ª—è Django
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ service.yaml          # –°–µ—Ä–≤—ñ—Å LoadBalancer
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ hpa.yaml              # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–µ –∞–≤—Ç–æ—Å–∫–µ–π–ª—ñ–Ω–≥
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ argocd-application.yaml  # ArgoCD Application
‚îÇ   ‚îú‚îÄ‚îÄ monitoring/         # Helm-—á–∞—Ä—Ç –¥–ª—è Prometheus —ñ Grafana
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Chart.yaml      # –ú–µ—Ç–∞–¥–∞–Ω–∏–π —á–∞—Ä—Ç—É
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ values.yaml     # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Prometheus/Grafana
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ templates/
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ namespace.yaml        # –ü—Ä–æ—Å—Ç—ñ—Ä —ñ–º–µ–Ω monitoring
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ prometheus.yaml       # Deployment/Service –¥–ª—è Prometheus
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ grafana.yaml          # Deployment/Service –¥–ª—è Grafana
‚îú‚îÄ‚îÄ web/goit/               # –î–∂–µ—Ä–µ–ª—å–Ω–∏–π –∫–æ–¥ Django
‚îÇ   ‚îú‚îÄ‚îÄ Dockerfile          # Dockerfile –¥–ª—è Django-–¥–æ–¥–∞—Ç–∫–∞
‚îÇ   ‚îú‚îÄ‚îÄ requirements.txt    # –ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ Python
‚îÇ   ‚îú‚îÄ‚îÄ manage.py           # –°–∫—Ä–∏–ø—Ç –∫–µ—Ä—É–≤–∞–Ω–Ω—è Django
‚îú‚îÄ‚îÄ modules/
‚îÇ   ‚îú‚îÄ‚îÄ s3-backend/         # S3 —Ç–∞ DynamoDB –¥–ª—è —Å—Ç–∞–Ω—É Terraform
‚îÇ   ‚îú‚îÄ‚îÄ vpc/                # VPC, –ø—ñ–¥–º–µ—Ä–µ–∂—ñ, NAT Gateway
‚îÇ   ‚îú‚îÄ‚îÄ ecr/                # –†–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π ECR
‚îÇ   ‚îú‚îÄ‚îÄ eks/                # EKS-–∫–ª–∞—Å—Ç–µ—Ä —ñ node group
‚îÇ   ‚îú‚îÄ‚îÄ rds/                # –£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π –º–æ–¥—É–ª—å RDS (PostgreSQL)
‚îÇ   ‚îú‚îÄ‚îÄ jenkins/            # Helm-–≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Jenkins
‚îÇ   ‚îú‚îÄ‚îÄ argocd/             # Helm-–≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è ArgoCD
‚îÇ   ‚îú‚îÄ‚îÄ monitoring/         # Helm-–≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Prometheus/Grafana
‚îú‚îÄ‚îÄ storageclass.yaml       # StorageClass –¥–ª—è EBS
‚îî‚îÄ‚îÄ README.markdown         # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è –ø—Ä–æ—î–∫—Ç—É
```

---

## üöÄ –ú–æ–¥—É–ª—å RDS

–ú–æ–¥—É–ª—å `rds` ‚Äî —Ü–µ —É–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π Terraform-–º–æ–¥—É–ª—å, —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î –∞–±–æ **AWS Aurora Cluster**, –∞–±–æ **—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π RDS** –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó `use_aurora`. –í—ñ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å—Ç–≤–æ—Ä—é—î –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ —Ä–µ—Å—É—Ä—Å–∏, —Ç–∞–∫—ñ —è–∫ DB Subnet Group, Security Group —Ç–∞ Parameter Group, –∑–∞–±–µ–∑–ø–µ—á—É—é—á–∏ –≥–Ω—É—á–∫—ñ—Å—Ç—å —ñ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –±–∞–≥–∞—Ç–æ—Ä–∞–∑–æ–≤–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è.

### –û—Å–Ω–æ–≤–Ω—ñ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ

- **–ì–Ω—É—á–∫–∏–π —Ç–∏–ø –±–∞–∑–∏ –¥–∞–Ω–∏—Ö**:
  - `use_aurora = true`: –°—Ç–≤–æ—Ä—é—î—Ç—å—Å—è Aurora Cluster —ñ–∑ writer-—ñ–Ω—Å—Ç–∞–Ω—Å–æ–º.
  - `use_aurora = false`: –°—Ç–≤–æ—Ä—é—î—Ç—å—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π RDS-—ñ–Ω—Å—Ç–∞–Ω—Å.
- **–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ—Å—É—Ä—Å—ñ–≤**:
  - **DB Subnet Group**: –ì—Ä—É–ø—É—î –ø—ñ–¥–º–µ—Ä–µ–∂—ñ –¥–ª—è —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö.
  - **Security Group**: –ù–∞–ª–∞—à—Ç–æ–≤—É—î –º–µ—Ä–µ–∂–µ–≤–∏–π –¥–æ—Å—Ç—É–ø —ñ–∑ –∑–∞–¥–∞–Ω–∏–º–∏ CIDR-–±–ª–æ–∫–∞–º–∏.
  - **Parameter Group**: –ó–∞—Å—Ç–æ—Å–æ–≤—É—î –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, `max_connections`, `log_statement`, `work_mem`).
- **–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —á–µ—Ä–µ–∑ –∑–º—ñ–Ω–Ω—ñ**: –ü—ñ–¥—Ç—Ä–∏–º—É—î –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é –¥–≤–∏–≥—É–Ω–∞, –≤–µ—Ä—Å—ñ—ó –¥–≤–∏–≥—É–Ω–∞, –∫–ª–∞—Å—É —ñ–Ω—Å—Ç–∞–Ω—Å—É —Ç–æ—â–æ.
- **–ë–∞–≥–∞—Ç–æ—Ä–∞–∑–æ–≤–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è**: –ú–æ–¥—É–ª—å —Ä–æ–∑—Ä–æ–±–ª–µ–Ω–æ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∑ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–º–∏ –∑–º—ñ–Ω–∞–º–∏ –∑–º—ñ–Ω–Ω–∏—Ö.

### –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è

–©–æ–± –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –º–æ–¥—É–ª—å `rds` —É –≤–∞—à—ñ–π Terraform-–∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó:

```hcl
module "rds" {
  source = "./modules/rds"

  use_aurora         = false  # true –¥–ª—è Aurora, false –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ RDS
  identifier         = "prod-db"
  engine             = "postgres"
  engine_version     = "15.7"
  instance_class     = "db.t3.micro"
  db_name            = "mydb"
  username           = "admin"
  password           = "securepassword123"
  vpc_id             = module.vpc.vpc_id
  subnet_ids         = module.vpc.private_subnet_ids
  allowed_cidr_blocks = ["10.0.0.0/16"]
  multi_az           = false

  parameters = [
    {
      name  = "max_connections"
      value = "200"
    },
    {
      name  = "log_statement"
      value = "ddl"
    },
    {
      name  = "work_mem"
      value = "4MB"
    }
  ]

  tags = {
    Environment = "production"
    Project     = "my-microservice"
  }
}
```

### –ó–º—ñ–Ω–Ω—ñ –º–æ–¥—É–ª—è RDS

–ù–∏–∂—á–µ –Ω–∞–≤–µ–¥–µ–Ω–æ –≤—Å—ñ –∑–º—ñ–Ω–Ω—ñ –¥–ª—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –º–æ–¥—É–ª—è `rds` –∑ –æ–ø–∏—Å–∞–º–∏, —Ç–∏–ø–∞–º–∏ —Ç–∞ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º.

| –ó–º—ñ–Ω–Ω–∞                  | –¢–∏–ø                 | –û–ø–∏—Å                                                                 | –ó–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º |
|-------------------------|---------------------|----------------------------------------------------------------------|--------------------------|
| `use_aurora`            | `bool`              | –°—Ç–≤–æ—Ä–∏—Ç–∏ Aurora Cluster (`true`) –∞–±–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π RDS (`false`)       | `false`                  |
| `identifier`            | `string`            | –£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è —Ä–µ—Å—É—Ä—Å—É –±–∞–∑–∏ –¥–∞–Ω–∏—Ö                      | –ù–µ–º–∞—î                    |
| `engine`                | `string`            | –¢–∏–ø –¥–≤–∏–≥—É–Ω–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, `postgres`, `mysql`)              | `postgres`               |
| `engine_version`        | `string`            | –í–µ—Ä—Å—ñ—è –¥–≤–∏–≥—É–Ω–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö                                           | `15.7`                   |
| `instance_class`        | `string`            | –ö–ª–∞—Å —ñ–Ω—Å—Ç–∞–Ω—Å—É –±–∞–∑–∏ –¥–∞–Ω–∏—Ö (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, `db.t3.micro`)                 | `db.t3.micro`            |
| `multi_az`              | `bool`              | –£–≤—ñ–º–∫–Ω—É—Ç–∏ —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è –≤ –∫—ñ–ª—å–∫–æ—Ö –∑–æ–Ω–∞—Ö –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ (–¥–ª—è RDS)         | `false`                  |
| `db_name`               | `string`            | –ù–∞–∑–≤–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö                                                    | `mydb`                   |
| `username`              | `string`            | –Ü–º'—è –≥–æ–ª–æ–≤–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞                                          | `admin`                  |
| `password`              | `string`            | –ü–∞—Ä–æ–ª—å –≥–æ–ª–æ–≤–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (—á—É—Ç–ª–∏–≤–∏–π)                             | –ù–µ–º–∞—î                    |
| `port`                  | `number`            | –ü–æ—Ä—Ç –±–∞–∑–∏ –¥–∞–Ω–∏—Ö                                                     | `5432`                   |
| `allocated_storage`     | `number`            | –í–∏–¥—ñ–ª–µ–Ω–∏–π –æ–±—Å—è–≥ –ø–∞–º‚Äô—è—Ç—ñ –≤ –ì–ë (–ª–∏—à–µ –¥–ª—è RDS)                         | `20`                     |
| `storage_type`          | `string`            | –¢–∏–ø –ø–∞–º‚Äô—è—Ç—ñ (–ª–∏—à–µ –¥–ª—è RDS, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, `gp2`)                        | `gp2`                    |
| `skip_final_snapshot`   | `bool`              | –ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ—ñ–Ω–∞–ª—å–Ω–æ–≥–æ –∑–Ω—ñ–º–∫–∞ –ø—Ä–∏ –∑–Ω–∏—â–µ–Ω–Ω—ñ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö       | `true`                   |
| `backup_retention_period` | `number`          | –ü–µ—Ä—ñ–æ–¥ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤–Ω–∏—Ö –∫–æ–ø—ñ–π —É –¥–Ω—è—Ö                            | `7`                      |
| `apply_immediately`     | `bool`              | –ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ –∑–º—ñ–Ω–∏ –Ω–µ–≥–∞–π–Ω–æ                                           | `false`                  |
| `vpc_id`                | `string`            | –Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä VPC –¥–ª—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö                                    | –ù–µ–º–∞—î                    |
| `subnet_ids`            | `list(string)`      | –°–ø–∏—Å–æ–∫ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ –ø—ñ–¥–º–µ—Ä–µ–∂ –¥–ª—è DB Subnet Group                 | –ù–µ–º–∞—î                    |
| `allowed_cidr_blocks`   | `list(string)`      | –°–ø–∏—Å–æ–∫ –¥–æ–∑–≤–æ–ª–µ–Ω–∏—Ö CIDR-–±–ª–æ–∫—ñ–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö             | `[]`                     |
| `parameter_group_family`| `string`            | –°—ñ–º–µ–π—Å—Ç–≤–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, `postgres15`)           | `postgres15`             |
| `parameters`            | `list(object)`      | –°–ø–∏—Å–æ–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, `max_connections`)         | –°–ø–∏—Å–æ–∫ —ñ–∑ 3 –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏  |
| `tags`                  | `map(string)`       | –¢–µ–≥–∏ –¥–ª—è —Ä–µ—Å—É—Ä—Å—ñ–≤                                                   | `{}`                     |

**–ü—Ä–∏–º—ñ—Ç–∫–∞**: –ó–º—ñ–Ω–Ω–∞ `parameters` –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –≤–∫–ª—é—á–∞—î:
```hcl

[
  { name = "max_connections", value = "100" },
  { name = "log_statement", value = "all" },
  { name = "work_mem", value = "4MB" }
]
```

### –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–∏–ø—É –±–∞–∑–∏ –¥–∞–Ω–∏—Ö, –¥–≤–∏–≥—É–Ω–∞ —Ç–∞ –∫–ª–∞—Å—É —ñ–Ω—Å—Ç–∞–Ω—Å—É

- **–ó–º—ñ–Ω–∞ —Ç–∏–ø—É –±–∞–∑–∏ –¥–∞–Ω–∏—Ö**:
  - –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å `use_aurora = true` –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è **Aurora Cluster** —ñ–∑ writer-—ñ–Ω—Å—Ç–∞–Ω—Å–æ–º.
  - –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å `use_aurora = false` –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è **—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ RDS-—ñ–Ω—Å—Ç–∞–Ω—Å—É**.

- **–ó–º—ñ–Ω–∞ –¥–≤–∏–≥—É–Ω–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö**:
  - –ó–º—ñ–Ω—ñ—Ç—å –∑–º—ñ–Ω–Ω—É `engine`, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –Ω–∞ `postgres` –∞–±–æ `mysql`.
  - –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ `engine_version` –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –≤–∏–±—Ä–∞–Ω–æ–º—É –¥–≤–∏–≥—É–Ω—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, `15.7` –¥–ª—è PostgreSQL).

- **–ó–º—ñ–Ω–∞ –∫–ª–∞—Å—É —ñ–Ω—Å—Ç–∞–Ω—Å—É**:
  - –í–∫–∞–∂—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω–∏–π –∫–ª–∞—Å —É –∑–º—ñ–Ω–Ω—ñ–π `instance_class`, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, `db.t3.micro` –∞–±–æ `db.r5.large`.

- **–î–æ–¥–∞—Ç–∫–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è**:
  - –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å `multi_az = true` –¥–ª—è —É–≤—ñ–º–∫–Ω–µ–Ω–Ω—è —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è –≤ –∫—ñ–ª—å–∫–æ—Ö –∑–æ–Ω–∞—Ö –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ (–ª–∏—à–µ –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ RDS).
  - –ù–∞–ª–∞—à—Ç—É–π—Ç–µ `parameters` –¥–ª—è –∑–º—ñ–Ω–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –∑–±—ñ–ª—å—à–µ–Ω–Ω—è `max_connections`.

---

## ‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–∞ –∑–∞–ø—É—Å–∫ CI/CD –∫–æ–Ω–≤–µ—î—Ä–∞

### –í–∏–º–æ–≥–∏

- **AWS CLI**: –ù–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ –∫–æ–º–∞–Ω–¥–æ—é `aws configure`.
- **Terraform**: –í–µ—Ä—Å—ñ—è >= 1.5.0.
- **kubectl**: –ù–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ –¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ EKS.
- **Helm**: –î–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —á–∞—Ä—Ç—ñ–≤.
- **argocd CLI**: –û–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ, –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∫–µ—Ä—É–≤–∞–Ω–Ω—è ArgoCD.
- **Docker**: –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ—ó –ø–æ–±—É–¥–æ–≤–∏ –æ–±—Ä–∞–∑—ñ–≤.
- **GitHub Token**: –î–ª—è –¥–æ—Å—Ç—É–ø—É Jenkins –¥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é.
- **argocd CLI**: –û–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ, –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∫–µ—Ä—É–≤–∞–Ω–Ω—è ArgoCD.

### –†–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è —ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –∑ Terraform

1. **–ö–ª–æ–Ω—É–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π**:
   ```bash
   git clone https://github.com/Lyfenko/my-microservice-project.git
   cd my-microservice-project
   git checkout final_project
   ```
   
**–ù–∞–ª–∞—à—Ç—É–π—Ç–µ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞:**
```
export GIT_USERNAME=<–≤–∞—à_GitHub_–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á>
export GIT_PASSWORD=<–≤–∞—à_GitHub_—Ç–æ–∫–µ–Ω>
```
2. **–í–∏–∫–æ–Ω–∞–π—Ç–µ —Å–∫—Ä–∏–ø—Ç —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó**:
   ```bash
   chmod +x init.sh
   ./init.sh
   ```
   –°–∫—Ä–∏–ø—Ç —Å—Ç–≤–æ—Ä—é—î:

    S3-–±–∞–∫–µ—Ç —ñ DynamoDB –¥–ª—è Terraform state.
    VPC, EKS, ECR, RDS.
    Jenkins, ArgoCD, Prometheus/Grafana —á–µ—Ä–µ–∑ Helm.
    –ó–∞—Å—Ç–æ—Å–æ–≤—É—î ArgoCD Application –¥–ª—è Django-–¥–æ–¥–∞—Ç–∫–∞.
    –û–Ω–æ–≤–ª—é—î charts/django-app/values.yaml —ñ–∑ RDS-–ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏.
    –ë—É–¥—É—î —Ç–∞ –ø—É—à–∏—Ç—å Docker-–æ–±—Ä–∞–∑ —É ECR.


3. **–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –≤–∏–≤–æ–¥–∏ Terraform**:
   ```bash
   terraform output
   ```
   **–ü—Ä–∏–∫–ª–∞–¥ –≤–∏–≤–æ–¥—ñ–≤**:
   ```
   ecr_repository_url = "216612008115.dkr.ecr.us-east-1.amazonaws.com/lesson7-django-repo"
   eks_cluster_endpoint = "https://7086C70AD2CD65B1C74113E638BBE11B.gr7.us-east-1.eks.amazonaws.com"
   eks_cluster_name = "lesson7-eks"
   vpc_id = "vpc-07f361c8bdf420cc9"
   rds_endpoint = "prod-db.cxxxxxxxxxxx.us-east-1.rds.amazonaws.com:5432"
   ```

### –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ Jenkins Pipeline

1. **–î–æ—Å—Ç—É–ø –¥–æ Jenkins UI**:
   - –û—Ç—Ä–∏–º–∞–π—Ç–µ URL:
     ```bash
     export SERVICE_IP=$(kubectl get svc -n jenkins jenkins -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
     echo $SERVICE_IP:8080
     ```
     **–ü—Ä–∏–∫–ª–∞–¥**: `http://a866681459fef49998fac46f78ea3bd2-790719666.us-east-1.elb.amazonaws.com:8080`
   - –û—Ç—Ä–∏–º–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å:
     ```bash
     kubectl exec --namespace jenkins -it svc/jenkins -c jenkins -- /bin/cat /run/secrets/additional/chart-admin-password && echo
     ```
     **–ü—Ä–∏–∫–ª–∞–¥**: `admin`
   - –£–≤—ñ–π–¥—ñ—Ç—å —ñ–∑ –ª–æ–≥—ñ–Ω–æ–º `admin` —ñ –æ—Ç—Ä–∏–º–∞–Ω–∏–º –ø–∞—Ä–æ–ª–µ–º.

2. **–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Pipeline**:
   - –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –ø–ª–∞–≥—ñ–Ω ‚ÄúGitHub‚Äù —É Jenkins: **Manage Jenkins ‚Üí Manage Plugins**.
   - –î–æ–¥–∞–π—Ç–µ GitHub —Ç–æ–∫–µ–Ω:
     - –ü–µ—Ä–µ–π–¥—ñ—Ç—å –¥–æ **Manage Jenkins ‚Üí Manage Credentials ‚Üí Add Credentials**.
     - –¢–∏–ø: **Username with password**.
     - ID: `github-token`.
     - –Ü–º‚Äô—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: –≤–∞—à–µ —ñ–º‚Äô—è –Ω–∞ GitHub.
     - –ü–∞—Ä–æ–ª—å: –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏–π —Ç–æ–∫–µ–Ω GitHub.
   - –°—Ç–≤–æ—Ä—ñ—Ç—å Pipeline:
     - –ü–µ—Ä–µ–π–¥—ñ—Ç—å –¥–æ **Pipeline ‚Üí New Item ‚Üí Pipeline**.
     - SCM: **Git**.
     - URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é: `https://github.com/Lyfenko/my-microservice-project.git`.
     - –ì—ñ–ª–∫–∞: `main`.
     - –û–±–ª—ñ–∫–æ–≤—ñ –¥–∞–Ω—ñ: `github-token`.
     - –®–ª—è—Ö –¥–æ —Å–∫—Ä–∏–ø—Ç–∞: `Jenkinsfile`.
   - –ó–∞–ø—É—Å—Ç—ñ—Ç—å Pipeline —ñ –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ:
     - –û–±—Ä–∞–∑ —É ECR: `216612008115.dkr.ecr.us-east-1.amazonaws.com/lesson7-django-repo:<BUILD_ID>`.
     - –û–Ω–æ–≤–ª–µ–Ω–Ω—è `charts/django-app/values.yaml`.
     - –ü—É—à –∑–º—ñ–Ω —É –≥—ñ–ª–∫—É `main`.

3. **–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ ECR**:
   ```bash
   aws ecr list-images --repository-name lesson7-django-repo --region us-east-1
   ```

### –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ ArgoCD —Ç–∞ Django-–¥–æ–¥–∞—Ç–∫–∞

1. **–î–æ—Å—Ç—É–ø –¥–æ ArgoCD UI**:
   - –û—Ç—Ä–∏–º–∞–π—Ç–µ URL:
     ```bash
     export ARGOCD_IP=$(kubectl get svc -n argocd argocd-server -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
     echo $ARGOCD_IP
     ```
   - –û—Ç—Ä–∏–º–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å:
     ```bash
     kubectl get secret -n argocd argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d && echo
     ```
   - –£–≤—ñ–π–¥—ñ—Ç—å —ñ–∑ –ª–æ–≥—ñ–Ω–æ–º `admin` —ñ –æ—Ç—Ä–∏–º–∞–Ω–∏–º –ø–∞—Ä–æ–ª–µ–º.

2. **–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Application**:
   - –£ ArgoCD UI –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Å—Ç–∞—Ç—É—Å `django-app` (**Synced/Healthy**).
   - –ê–±–æ —á–µ—Ä–µ–∑ CLI:
     ```bash
     kubectl get application -n argocd
     ```
     **–û—á—ñ–∫—É–≤–∞–Ω–∏–π –≤–∏–≤—ñ–¥**:
     ```
     NAME         SYNC STATUS   HEALTH STATUS
     django-app   Synced        Healthy
     ```

3. c–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Django-–¥–æ–¥–∞—Ç–∫–∞**:
   - –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø–æ–¥–∏:
     ```bash
     kubectl get pods -n default
     ```
     **–û—á—ñ–∫—É–≤–∞–Ω–æ**: Django —Ç–∞ PostgreSQL –ø–æ–¥–∏ —É —Å—Ç–∞–Ω—ñ `Running`.
   - –û—Ç—Ä–∏–º–∞–π—Ç–µ URL —Å–µ—Ä–≤—ñ—Å—É:
     ```bash
     export DJANGO_IP=$(kubectl get svc -n default django-app -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
     echo $DJANGO_IP:80
     ```
     **–ü—Ä–∏–∫–ª–∞–¥**: `http://afc50e85cfd3c4819b529dcfeefb6a6f-681129598.us-east-1.elb.amazonaws.com:80`
   - –í—ñ–¥–∫—Ä–∏–π—Ç–µ URL —É –±—Ä–∞—É–∑–µ—Ä—ñ.

```Prometheus/Grafana:```

```–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Ä–µ—Å—É—Ä—Å–∏:```
   
 ``` bash

kubectl get all -n monitoring
```

```–î–æ—Å—Ç—É–ø –¥–æ Grafana:```
``` bash
kubectl port-forward svc/grafana 3000:80 -n monitoring
–í—ñ–¥–∫—Ä–∏–π—Ç–µ: http://localhost:3000 (–ª–æ–≥—ñ–Ω: admin, –ø–∞—Ä–æ–ª—å: prom-operator).
```
---

## üîÑ –°—Ö–µ–º–∞ CI/CD –∫–æ–Ω–≤–µ—î—Ä–∞

### Jenkins
- –í–∏—è–≤–ª—è—î –∑–º—ñ–Ω–∏ –≤ –≥—ñ–ª—Ü—ñ `main`.
- –ë—É–¥—É—î Docker-–æ–±—Ä–∞–∑ —ñ–∑ `Dockerfile`.
- –ü—É—à–∏—Ç—å –æ–±—Ä–∞–∑ —É ECR (`216612008115.dkr.ecr.us-east-1.amazonaws.com/lesson7-django-repo:<BUILD_ID>`).
- –û–Ω–æ–≤–ª—é—î `image.tag` —É `charts/django-app/values.yaml`.
- –ö–æ–º—ñ—Ç–∏—Ç—å —ñ –ø—É—à–∏—Ç—å –∑–º—ñ–Ω–∏ –≤ Git.

### ArgoCD
- –°—Ç–µ–∂–∏—Ç—å –∑–∞ –≥—ñ–ª–∫–æ—é `main` (`https://github.com/Lyfenko/my-microservice-project.git`).
- –í–∏—è–≤–ª—è—î –∑–º—ñ–Ω–∏ –≤ `charts/django-app`.
- –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—î Helm-—á–∞—Ä—Ç –¥–ª—è —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–æ–≥–æ Django-–¥–æ–¥–∞—Ç–∫–∞ –≤ EKS.

---

## üõ† –£—Å—É–Ω–µ–Ω–Ω—è –Ω–µ—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–µ–π

### Jenkins UI –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–µ
- –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª–æ–≥–∏:
  ```bash
  kubectl logs -n jenkins jenkins-0 -c jenkins
  ```
- –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –ø–æ—Ä—Ç `8080` –≤—ñ–¥–∫—Ä–∏—Ç–∏–π —É –≥—Ä—É–ø—ñ –±–µ–∑–ø–µ–∫–∏ EKS.

### –ü–æ–¥–∏ Django –≤ —Å—Ç–∞–Ω—ñ `InvalidImageName`
- –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ ECR:
  ```bash
  aws ecr list-images --repository-name lesson7-django-repo --region us-east-1
  ```
- –ü–æ–±—É–¥—É–π—Ç–µ —Ç–∞ –∑–∞–ø—É—à—Ç–µ –æ–±—Ä–∞–∑:
  ```bash
  aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 216612008115.dkr.ecr.us-east-1.amazonaws.com
  docker build -t 216612008115.dkr.ecr.us-east-1.amazonaws.com/lesson7-django-repo:latest .
  docker push 216612008115.dkr.ecr.us-east-1.amazonaws.com/lesson7-django-repo:latest
  ```
- –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É–π—Ç–µ ArgoCD:
  ```bash
  argocd app sync django-app --namespace argocd
  ```

### –ü—Ä–æ–±–ª–µ–º–∏ —ñ–∑ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—î—é ArgoCD
- –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Å—Ç–∞—Ç—É—Å:
  ```bash
  kubectl describe application django-app -n argocd
  ```
- –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ Git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π –¥–æ—Å—Ç—É–ø–Ω–∏–π —É ArgoCD UI –∞–±–æ `argocd-secret`.